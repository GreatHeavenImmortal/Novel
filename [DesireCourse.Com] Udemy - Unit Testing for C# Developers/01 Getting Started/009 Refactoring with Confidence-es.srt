1
00:00:00,000 --> 00:00:04,000
Por lo tanto, he cambiado el nombre de estos mtodos

2
00:00:04,000 --> 00:00:08,000
de prueba para que sean ms consistentes y fciles de leer.

3
00:00:08,000 --> 00:00:12,000
Entonces, tenemos tres escenarios, cancelacin de administrador, cancelacin

4
00:00:12,000 --> 00:00:16,000
de usuario mismo y cancelacin de otro usuario.

5
00:00:16,000 --> 00:00:20,000
Una cosa que puedes ver sobre esta prueba es que actan como una

6
00:00:20,000 --> 00:00:24,000
especie de documentacin sobre nuestro cdigo fuente, este es otro beneficio de escribir

7
00:00:24,000 --> 00:00:28,000
pruebas, imagina que te unes a un nuevo equipo que te ofrece un

8
00:00:28,000 --> 00:00:32,000
nuevo proyecto, y tu tarea es hacer algunas modificaciones a una clase.

9
00:00:32,000 --> 00:00:36,000
Si esa clase cuenta con el respaldo adecuado de un

10
00:00:36,000 --> 00:00:40,000
conjunto de pruebas unitarias, puede averiguar fcilmente cul es la

11
00:00:40,000 --> 00:00:44,000
responsabilidad de esa clase. Ahora djame mostrarte otro beneficio de escribir pruebas.

12
00:00:44,000 --> 00:00:48,000
Anteriormente en esta seccin, le dije que una vez que tenga las pruebas,

13
00:00:48,000 --> 00:00:52,000
puede refactorizar su cdigo con confianza. Entonces, de vuelta en nuestra

14
00:00:52,000 --> 00:00:56,000
clase de reserva, no me gusta la forma en que se

15
00:00:56,000 --> 00:01:00,000
implementa este mtodo, se ve muy amateur, as que voy a

16
00:01:00,000 --> 00:01:04,000
refactorizarlo, y luego ejecutar todas mis pruebas, y ver si he

17
00:01:04,000 --> 00:01:08,000
roto algo o no . Entonces, el primer cambio que

18
00:01:08,000 --> 00:01:12,000
voy a hacer aqu es en lugar de tener dos

19
00:01:12,000 --> 00:01:16,000
declaraciones if, voy a tener una declaracin if y usar

20
00:01:16,000 --> 00:01:20,000
el operador lgico u operador. Entonces, si el usuario es administrador

21
00:01:20,000 --> 00:01:24,000
o MadeBy es igual a usuario. Vas a volver verdadero, de lo

22
00:01:24,000 --> 00:01:28,000
contrario, vamos a devolver falso. Ahora, de vuelta en

23
00:01:28,000 --> 00:01:32,000
el explorador de prueba, ejecute todas las pruebas,

24
00:01:32,000 --> 00:01:36,000
por lo tanto, mis pruebas estn verificando que

25
00:01:36,000 --> 00:01:40,000
nuestra aplicacin todava est funcionando. No he roto nada.

26
00:01:40,000 --> 00:01:44,000
Puedo llevar esto al siguiente nivel. Entonces, en lugar de

27
00:01:44,000 --> 00:01:48,000
tener esta declaracin if aqu, y luego

28
00:01:48,000 --> 00:01:52,000
devolver false, simplemente voy a devolver el

29
00:01:52,000 --> 00:01:56,000
resultado de esta expresin. Ahora, tenemos solo una

30
00:01:56,000 --> 00:02:00,000
lnea de cdigo aqu. Una vez ms,

31
00:02:00,000 --> 00:02:04,000
ejecutamos todas las pruebas, todas las

32
00:02:04,000 --> 00:02:08,000
pruebas estn aprobadas, nuestro cdigo es

33
00:02:08,000 --> 00:02:12,000
mucho ms limpio y puede ver

34
00:02:12,000 --> 00:02:14,666
otro beneficio de escribir pruebas.

