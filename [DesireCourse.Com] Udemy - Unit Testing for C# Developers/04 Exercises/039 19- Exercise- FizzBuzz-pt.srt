1
00:00:00,000 --> 00:00:04,000
Tudo bem, agora  hora de fazer um exerccio.

2
00:00:04,000 --> 00:00:08,000
Ento, na pasta fundamental, abra

3
00:00:08,000 --> 00:00:12,000
esse arquivo. FizzBuzz.

4
00:00:12,000 --> 00:00:16,000
Caso voc nunca tenha visto o FizzBuzz antes,  basicamente

5
00:00:16,000 --> 00:00:20,000
uma das perguntas que s vezes vem em entrevistas de programao.

6
00:00:20,000 --> 00:00:24,000
Assim, o entrevistador pode pedir que voc escreva uma funo que receba

7
00:00:24,000 --> 00:00:28,000
um nmero e retorne uma string. Se este nmero for

8
00:00:28,000 --> 00:00:32,000
divisvel por 3 e 5, a funo deve

9
00:00:32,000 --> 00:00:36,000
retornar ao FizzBuzz. Se o nmero for

10
00:00:36,000 --> 00:00:40,000
apenas divisvel por 3, ele deve retornar Fizz, se

11
00:00:40,000 --> 00:00:44,000
for divisvel por 5, deve retornar Buzz, caso contrrio,

12
00:00:44,000 --> 00:00:48,000
deve retornar o mesmo nmero. Agora existem vrias maneiras de implementar

13
00:00:48,000 --> 00:00:52,000
essa funo, isso  apenas uma maneira. O que eu quero que voc faa

14
00:00:52,000 --> 00:00:56,000
agora  escrever um monte de testes de unidade para essa funo para garantir

15
00:00:56,000 --> 00:01:00,000
que essa funo seja implementada corretamente. Mais uma vez, no

16
00:01:00,000 --> 00:01:04,000
confie nesses caminhos de execuo, mas use-os como

17
00:01:04,000 --> 00:01:08,000
ponto de partida. Ento pense nessa funo,

18
00:01:08,000 --> 00:01:12,000
GetOutput, como uma caixa preta. Voc conhece o algoritmo FizzBuzz

19
00:01:12,000 --> 00:01:16,000
para garantir que essa funo implemente esse algoritmo corretamente.

20
00:01:16,000 --> 00:01:19,000
Na prxima palestra, voc ver a minha soluo.

