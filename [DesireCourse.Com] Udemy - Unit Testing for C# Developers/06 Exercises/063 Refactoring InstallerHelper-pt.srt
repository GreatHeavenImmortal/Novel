1
00:00:00,000 --> 00:00:04,000
Ento, como esse cdigo toca em

2
00:00:04,000 --> 00:00:08,000
um recurso externo, precisamos fazer alguma refatorao.

3
00:00:08,000 --> 00:00:12,000
E abra esta classe para testabilidade. Ento, de volta

4
00:00:12,000 --> 00:00:16,000
 nossa soluo na pasta Mocking,

5
00:00:16,000 --> 00:00:20,000
vou criar uma nova classe, chamada

6
00:00:20,000 --> 00:00:24,000
File Downloader. Voc quer isolar todo

7
00:00:24,000 --> 00:00:28,000
o cdigo, mas baixando o arquivo dentro desta classe.

8
00:00:28,000 --> 00:00:32,000
Ento, aqui precisamos de um mtodo

9
00:00:32,000 --> 00:00:36,000
simples, public_void, DownloadFile, que aceita dois parmetros.

10
00:00:36,000 --> 00:00:40,000
Uma  a URL do arquivo e a outra 

11
00:00:40,000 --> 00:00:44,000
o caminho e o sistema de arquivos para armazen-lo.

12
00:00:44,000 --> 00:00:48,000
Agora, de volta ao ajudante do instalador, essas so

13
00:00:48,000 --> 00:00:52,000
as linhas que precisamos mover para essa nova classe.

14
00:00:52,000 --> 00:00:56,000
Mas eu no vou cortar esse cdigo daqui ainda. Eu simplesmente vou copi-lo e voc

15
00:00:56,000 --> 00:01:00,000
ver por que em um segundo. Ento copie,

16
00:01:00,000 --> 00:01:04,000
cole aqui. Tudo bem, primeiro precisamos

17
00:01:04,000 --> 00:01:08,000
do nosso objeto web client. Ento, voltando  nossa

18
00:01:08,000 --> 00:01:12,000
classe auxiliar, vou cortar essa primeira linha e

19
00:01:12,000 --> 00:01:16,000
mover o objeto WebClient para nossa nova classe.

20
00:01:16,000 --> 00:01:20,000
Vamos importar o NameSpace.

21
00:01:20,000 --> 00:01:24,000
Bonita. Ento, aqui precisamos fazer

22
00:01:24,000 --> 00:01:28,000
algumas mudanas simples. Eu no vou usar este nome

23
00:01:28,000 --> 00:01:32,000
de cliente e installerName aqui. Como esses conceitos no

24
00:01:32,000 --> 00:01:36,000
se enquadram no escopo do FileDownloader, eles pertencem

25
00:01:36,000 --> 00:01:40,000
ao auxiliar do instalador. Porque esta classe sabe sobre

26
00:01:40,000 --> 00:01:44,000
customerNames, ele sabe sobre installerNames esta  uma classe de

27
00:01:44,000 --> 00:01:48,000
nvel superior em nossa aplicao. FileDownloader em contraste  uma

28
00:01:48,000 --> 00:01:52,000
classe de baixo nvel,  burra, no sabe nada sobre

29
00:01:52,000 --> 00:01:56,000
o nosso domnio de negcios, tudo o que se sabe

30
00:01:56,000 --> 00:02:00,000
 como obter um arquivo a partir desta URL e

31
00:02:00,000 --> 00:02:04,000
armazen-lo neste local. Ento, em vez de usar o

32
00:02:04,000 --> 00:02:08,000
formato de string para construir o URL. Vou passar o argumento url,

33
00:02:08,000 --> 00:02:12,000
que chegamos aqui, e tambm como segundo argumento, vou usar

34
00:02:12,000 --> 00:02:16,000
esse caminho (? ). Agora vamos

35
00:02:16,000 --> 00:02:20,000
coloc-los em uma linha, ento basicamente tudo

36
00:02:20,000 --> 00:02:24,000
o que estamos fazendo aqui  encapsular

37
00:02:24,000 --> 00:02:28,000
o cdigo que toca um recurso externo

38
00:02:28,000 --> 00:02:32,000
dentro do FileDownloader. E a razo pela qual estamos fazendo isso

39
00:02:32,000 --> 00:02:36,000
 extrair uma interface para que possamos zombar dessa interface em nossos testes de unidade.

40
00:02:36,000 --> 00:02:40,000
Eu vou te dizer uma coisa. Se essa classe de cliente

41
00:02:40,000 --> 00:02:44,000
da Web foi projetada corretamente, no precisamos criar uma

42
00:02:44,000 --> 00:02:48,000
classe separada como o FileDownloader para extrair uma interface.

43
00:02:48,000 --> 00:02:52,000
s vezes, quando voc trabalha com bibliotecas de terceiros, pode

44
00:02:52,000 --> 00:02:56,000
perceber que algumas de suas classes vm com interfaces.

45
00:02:56,000 --> 00:03:00,000
Por exemplo, se tivssemos uma interface como IWebClient,

46
00:03:00,000 --> 00:03:04,000
ento poderamos simplesmente injetar essa interface dentro do

47
00:03:04,000 --> 00:03:08,000
installerHelper, e ento no teramos que criar uma

48
00:03:08,000 --> 00:03:12,000
classe extra como essa. Ento, vamos remover

49
00:03:12,000 --> 00:03:16,000
isso, agora, vamos extrair uma

50
00:03:16,000 --> 00:03:20,000
interface aqui, refatorar, extrair interface,

51
00:03:20,000 --> 00:03:24,000
e vamos selecionar esse mtodo,

52
00:03:24,000 --> 00:03:28,000
em seguida, bonito. Ento ns

53
00:03:28,000 --> 00:03:32,000
temos o IFileDownloader. Em seguida, vamos injetar

54
00:03:32,000 --> 00:03:36,000
isso no construtor, do installerHelper. Ento, construtor,

55
00:03:36,000 --> 00:03:40,000
injetar arquivo (? )

56
00:03:40,000 --> 00:03:44,000
IFileDownloader, chame-o fileDownloader.

57
00:03:44,000 --> 00:03:48,000
Em seguida, vamos criar e inicializar

58
00:03:48,000 --> 00:03:52,000
o campo privado. Ento, olhe que temos

59
00:03:52,000 --> 00:03:56,000
essa leitura privada no campo do tipo IFile

60
00:03:56,000 --> 00:04:00,000
Downloader, e isso  inicializado usando o argumento

61
00:04:00,000 --> 00:04:04,000
que obtemos do construtor, injeo bsica de dependncia.

62
00:04:04,000 --> 00:04:08,000
Agora, finalmente, no mtodo DownloadInstaller, em vez de

63
00:04:08,000 --> 00:04:12,000
usar este objeto cliente, vamos usar o fileDownloader,

64
00:04:12,000 --> 00:04:16,000
e o resto do cdigo  bom.

65
00:04:16,000 --> 00:04:20,000
Portanto, este mtodo DownloadInstaller  um mtodo de nvel

66
00:04:20,000 --> 00:04:24,000
mais alto, est delegando a tarefa de baixar o

67
00:04:24,000 --> 00:04:28,000
arquivo para este objeto fileDownloader, mas ele sabe sobre

68
00:04:28,000 --> 00:04:32,000
nomes de clientes e installerNames, ento usa esse conceito

69
00:04:32,000 --> 00:04:36,000
para construir uma URL. Se tudo correr bem, ele retornar verdadeiro,

70
00:04:36,000 --> 00:04:40,000
se algo der errado, ele retornar falso. Ento, aqui temos dois caminhos

71
00:04:40,000 --> 00:04:44,000
de execuo e precisamos escrever dois testes unitrios para essa classe.

72
00:04:44,000 --> 00:04:47,000
E  isso que vou mostrar a voc em seguida.

