1
00:00:00,000 --> 00:00:04,000
So earlier in this section, we

2
00:00:04,000 --> 00:00:08,000
created this FakeFileReader, and we used this to write

3
00:00:08,000 --> 00:00:12,000
one unit test for our video service class. So in this test,

4
00:00:12,000 --> 00:00:16,000
we're testing only one of the execution paths,

5
00:00:16,000 --> 00:00:20,000
in ReadVideoTitle method, that's the execution path

6
00:00:20,000 --> 00:00:24,000
that we are testing. But what if you want to test the other execution

7
00:00:24,000 --> 00:00:28,000
paths? Well, we need to change our

8
00:00:28,000 --> 00:00:32,000
FakeFileReader, so instead of returning an empty string,

9
00:00:32,000 --> 00:00:36,000
we should return a real video object, serialized

10
00:00:36,000 --> 00:00:40,000
as json. But here's the problem, if you modify this code,

11
00:00:40,000 --> 00:00:44,000
the existing unit test is going to break. So we should create

12
00:00:44,000 --> 00:00:48,000
another FakeFileReader that implements this interface

13
00:00:48,000 --> 00:00:52,000
and in that fake object, instead of returning an empty string,

14
00:00:52,000 --> 00:00:56,000
we should return a real json object. We can see that this

15
00:00:56,000 --> 00:01:00,000
approach is very time consuming. Creating all these fake objects by hand takes

16
00:01:00,000 --> 00:01:04,000
a lot of time. So that's why we use a mocking

17
00:01:04,000 --> 00:01:08,000
isolation framework. So there are frameworks out there

18
00:01:08,000 --> 00:01:12,000
that help us dynamically create these fake, or mock

19
00:01:12,000 --> 00:01:16,000
objects. So we don't have to hard code them by hand.

20
00:01:16,000 --> 00:01:20,000
We can create them dynamically as part of our tests. and more

21
00:01:20,000 --> 00:01:24,000
interestingly, we can program them to behave any way

22
00:01:24,000 --> 00:01:28,000
we want. So we can program them to throw exceptions, to

23
00:01:28,000 --> 00:01:32,000
return values, to raise events, and so on. Again, we

24
00:01:32,000 --> 00:01:36,000
have different isolation or mocking frameworks out there, we have mock

25
00:01:36,000 --> 00:01:40,000
with a q, we have Nsubstitute, we have FakeItEasy,

26
00:01:40,000 --> 00:01:44,000
we have Rhino Mocks and so on. After all these frameworks the one

27
00:01:44,000 --> 00:01:48,000
I personally prefer is mock. So in the next lecture, I'm

28
00:01:48,000 --> 00:01:52,000
going to show you how to use this framework to dynamically create

29
00:01:52,000 --> 00:01:55,000
or mock objects.

