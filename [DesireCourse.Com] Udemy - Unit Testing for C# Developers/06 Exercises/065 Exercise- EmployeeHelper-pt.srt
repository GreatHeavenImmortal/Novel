1
00:00:00,000 --> 00:00:04,000
Tudo bem, aqui est um exerccio para voc.

2
00:00:04,000 --> 00:00:08,000
Ento, na pasta Mocking, olhe para EmployeeController.

3
00:00:08,000 --> 00:00:12,000
Este  um exemplo de cdigo que voc v em

4
00:00:12,000 --> 00:00:16,000
um monte de ASP. Aplicaes NET MVC. Agora este no

5
00:00:16,000 --> 00:00:20,000
 um exemplo totalmente funcional,  puramente simulao, porque aqui

6
00:00:20,000 --> 00:00:24,000
no temos um ASP. Projeto NET MVC. Ns temos uma biblioteca de classes simples.

7
00:00:24,000 --> 00:00:28,000
Mas isso de lado, vamos ver o que est acontecendo aqui. Ento, nessa

8
00:00:28,000 --> 00:00:32,000
classe, temos esse campo particular

9
00:00:32,000 --> 00:00:36,000
do tipo EmployeeContext. Isso faz parte do framework da entidade.

10
00:00:36,000 --> 00:00:40,000
Ento, se voc olhar para baixo, este EmployeeContext se parece

11
00:00:40,000 --> 00:00:44,000
com um contexto de banco de dados no framework de

12
00:00:44,000 --> 00:00:48,000
entidade, ento ele tem uma propriedade do tipo, DbSet of Employee.

13
00:00:48,000 --> 00:00:52,000
Aqui ns deveramos realmente derivar isso do contexto DB, eu esqueci de fazer isso, mas isso realmente

14
00:00:52,000 --> 00:00:56,000
no importa, porque ns no queremos rodar este cdigo. Ento, temos

15
00:00:56,000 --> 00:01:00,000
este EmployeeContext e inicializamos

16
00:01:00,000 --> 00:01:04,000
isso no construtor. Temos esse mtodo, delete

17
00:01:04,000 --> 00:01:08,000
Employee, leva um inteiro, esse  o ID do

18
00:01:08,000 --> 00:01:12,000
funcionrio, agora aqui nessas trs linhas, tentamos deletar esse

19
00:01:12,000 --> 00:01:16,000
funcionrio do banco de dados. Ento, primeiro, tentamos encontrar

20
00:01:16,000 --> 00:01:20,000
esse funcionrio, remov-lo do contexto e, nesse

21
00:01:20,000 --> 00:01:24,000
ponto, esse funcionrio  marcado para excluso.

22
00:01:24,000 --> 00:01:28,000
Mas as alteraes no so persistidas no banco de dados, ainda.

23
00:01:28,000 --> 00:01:32,000
Quando chamamos DB. salvar alteraes, a estrutura de entidade

24
00:01:32,000 --> 00:01:36,000
gera a consulta correta e a envia ao banco de dados.

25
00:01:36,000 --> 00:01:40,000
E neste momento, o registro do empregado (? )  deletado.

26
00:01:40,000 --> 00:01:44,000
E finalmente, direcionamos o usurio para a lista de funcionrios.

27
00:01:44,000 --> 00:01:48,000
Ento, se voc quiser testar esse mtodo, voc precisa

28
00:01:48,000 --> 00:01:52,000
escrever, dois testes, um  garantir que esse mtodo

29
00:01:52,000 --> 00:01:56,000
retorne o resultado correto. E isso  o que chamamos

30
00:01:56,000 --> 00:02:00,000
de testes baseados em estado. Outro teste  garantir

31
00:02:00,000 --> 00:02:04,000
que esse mtodo exclua o empregado determinado do

32
00:02:04,000 --> 00:02:08,000
banco de dados. Ento, primeiro de tudo, voc precisa

33
00:02:08,000 --> 00:02:12,000
extrair essas poucas linhas em uma classe separada, porque essas linhas tocam em

34
00:02:12,000 --> 00:02:16,000
um recurso externo, neste caso, um banco de dados, ento voc quer extrair

35
00:02:16,000 --> 00:02:20,000
isso em uma classe separada como EmployeeStorage. Em seguida, extraia a

36
00:02:20,000 --> 00:02:24,000
interface, injetada no construtor aqui e, finalmente, declare

37
00:02:24,000 --> 00:02:28,000
que esse mtodo chama o mtodo correto nesse

38
00:02:28,000 --> 00:02:32,000
objeto de armazenamento. Ento, v em frente e

39
00:02:32,000 --> 00:02:36,000
faa este exerccio, na prxima aula, veremos a minha soluo.

